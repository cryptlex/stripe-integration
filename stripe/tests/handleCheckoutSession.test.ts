import createClient from "openapi-fetch";
import { afterAll, afterEach, beforeAll, expect, test, vi } from "vitest";
import type { paths } from "@cryptlex/web-api-types"; // generated by openapi-typescript
import { server } from "../../mock-server/node";
import { baseURL as MswBaseUrl } from "../../mock-server/handlers";
import { handleCheckoutSessionFlow } from '../lib/handlers/handleCheckoutSession';

beforeAll(() => {
  // NOTE: server.listen must be called before `createClient` is used to ensure
  // the msw can inject its version of `fetch` to intercept the requests.
  server.listen({
    onUnhandledRequest: (request) => {
      throw new Error(
        `No request handler found for ${request.method} ${request.url}`
      );
    },
  });
});

afterEach(() => server.resetHandlers());
afterAll(() => server.close());

test("Handle Checkout Session Flow", async () => {
  const client = createClient<paths>({
    baseUrl: MswBaseUrl
  });

  await handleCheckoutSessionFlow({
    event: {
      "id": "evt_0QOyrHNVnO4N9Tuymgl4otnZ",
      "object": "event",
      "api_version": "2024-11-20.acacia",
      "created": 1732527931,
      "data": {
        "object": {
          "id": "cs_test_a1nDMDfKgwCPMmSsRTHpsVMysWAYwygYJlCw780jhOVqucvkp0fQCGxTEU",
          "object": "checkout.session",
          "adaptive_pricing": {
            "enabled": false
          },
          "after_expiration": null,
          "allow_promotion_codes": null,
          "amount_subtotal": 3000,
          "amount_total": 3000,
          "automatic_tax": {
            "enabled": false,
            "liability": null,
            "status": null
          },
          "billing_address_collection": null,
          "cancel_url": "https://httpbin.org/post",
          "client_reference_id": null,
          "client_secret": null,
          "consent": null,
          "consent_collection": null,
          "created": 1732527927,
          "currency": "usd",
          "currency_conversion": null,
          "custom_fields": [],
          "custom_text": {
            "after_submit": null,
            "shipping_address": null,
            "submit": null,
            "terms_of_service_acceptance": null
          },
          "customer": "cus_RHXxpK5CCTD49x",
          "customer_creation": "always",
          "customer_details": {
            "address": {
              "city": "South San Francisco",
              "country": "US",
              "line1": "354 Oyster Point Blvd",
              "line2": null,
              "postal_code": "94080",
              "state": "CA"
            },
            "email": "stripe@example.com",
            "name": "Jenny Rosen",
            "phone": null,
            "tax_exempt": "none",
            "tax_ids": []
          },
          "customer_email": null,
          "expires_at": 1732614327,
          "invoice": null,
          "invoice_creation": {
            "enabled": false,
            "invoice_data": {
              "account_tax_ids": null,
              "custom_fields": null,
              "description": null,
              "footer": null,
              "issuer": null,
              "metadata": {},
              "rendering_options": null
            }
          },
          "livemode": false,
          "locale": null,
          "metadata": {},
          "mode": "payment",
          "payment_intent": "pi_2QOyrDNVnO4N9Tuy16NZcJDU",
          "payment_link": null,
          "payment_method_collection": "always",
          "payment_method_configuration_details": {
            "id": "pmc_0KU3ojNVnO4N9TuyCMhYmSvq",
            "parent": null
          },
          "payment_method_options": {
            "card": {
              "request_three_d_secure": "automatic"
            }
          },
          "payment_method_types": [
            "card"
          ],
          "payment_status": "paid",
          "phone_number_collection": {
            "enabled": false
          },
          "recovered_from": null,
          "saved_payment_method_options": {
            "allow_redisplay_filters": [
              "always"
            ],
            "payment_method_remove": null,
            "payment_method_save": null
          },
          "setup_intent": null,
          "shipping_address_collection": null,
          "shipping_options": [],
          "status": "complete",
          "submit_type": null,
          "subscription": null,
          "success_url": "https://httpbin.org/post",
          "total_details": {
            "amount_discount": 0,
            "amount_shipping": 0,
            "amount_tax": 0
          },
          "ui_mode": "hosted",
          "url": null,
          "shipping_cost": null,
          "shipping_details": null
        }
      },
      "livemode": false,
      "pending_webhooks": 1,
      "request": {
        "id": null,
        "idempotency_key": null
      },
      "type": "checkout.session.completed"
    },
    client: client,
    productId: "DUMMY_PRODUCT_ID"
  });

});